<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Openssl on Greg Beifuss</title>
        <link>https://gbeifuss.github.io/tags/openssl/</link>
        <description>Recent content in Openssl on Greg Beifuss</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 23 Sep 2021 08:43:28 -0400</lastBuildDate><atom:link href="https://gbeifuss.github.io/tags/openssl/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Installing a certificate in PowerApps</title>
        <link>https://gbeifuss.github.io/p/installing-a-certificate-in-powerapps/</link>
        <pubDate>Thu, 23 Sep 2021 08:43:28 -0400</pubDate>
        
        <guid>https://gbeifuss.github.io/p/installing-a-certificate-in-powerapps/</guid>
        <description>&lt;p&gt;My organization has a Microsoft Dynamics PowerApps-based website to allow a subset of our customers to manage their applications to us. It&amp;rsquo;s secured using HTTPS, as all good website should be. That means I need to update the certificate annually, and it&amp;rsquo;s a time-consuming process because we don&amp;rsquo;t actually own the domain that our PowerApps site is listening on. Here&amp;rsquo;s a high-level overview of what a renewal entails:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate a CSR&lt;/li&gt;
&lt;li&gt;Complete paperwork for our parent organization&amp;rsquo;s certificate management department:
&lt;ul&gt;
&lt;li&gt;Information about the requested certificate type, my contact information, my manager&lt;/li&gt;
&lt;li&gt;Send this to our parent company for signoff from our representative&lt;/li&gt;
&lt;li&gt;Attach the CSR to the form and send it to our parent company&amp;rsquo;s certificate management department. I don&amp;rsquo;t know why our rep. cannot sign this after we&amp;rsquo;ve submitted it to the certificate management department.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Get the new certificate&lt;/li&gt;
&lt;li&gt;Merge the CSR with the private KEY and create a PFX&lt;/li&gt;
&lt;li&gt;Upload the PFX to Netscaler
&lt;ul&gt;
&lt;li&gt;Bind to the VSRV object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Upload to PowerApps
&lt;ul&gt;
&lt;li&gt;Bind to the proper portal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Confirm that the certificate is now in use and working&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Honestly, getting the paperwork filled out is the hardest part of the whole process because it gets bounced around and needs to be escalated a certain way (politics). Documenting that hassle isn&amp;rsquo;t going to be useful for anyone else, so let&amp;rsquo;s focus on the technical parts.&lt;/p&gt;
&lt;h2 id=&#34;generate-a-csr&#34;&gt;Generate a CSR
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;ve used the &lt;a class=&#34;link&#34; href=&#34;https://www.certificatetools.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CertificateTools.com X509 Certificate Generator&lt;/a&gt; site in the past because it can handle SANs (Subject Alternative Name). This particular site needs 4 domains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;company.com&lt;/li&gt;
&lt;li&gt;company.ca&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.company.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.company.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.company.ca&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.company.ca&lt;/a&gt;
I enter all of the required information and then a Certificate Request (CSR) is generated, along with the Private Key. This can also be done in openssl, if you&amp;rsquo;re worried about having the private key for your certificate generated by a server outside your control.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;rsquo;s walk through generating this with openssl! First, let&amp;rsquo;s generate the random file and set the config file:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;D:\&amp;gt;set OPENSSL_CONF=d:\apps\OpenSSL\bin\openssl.cfg
D:\&amp;gt;set RANDFILE=.rnd
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now, enable support for SAN in your request. Edit the config file &lt;code&gt;d:\apps\OpenSSL\bin\openssl.cfg&lt;/code&gt; to add the requirement for req_ext, and add SAN/DNS names to the &lt;code&gt;req_ext&lt;/code&gt; section.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ req_ext ]
subjectAltName = DNS: www.company.com, DNS: company.com, DNS: www.company.ca
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let&amp;rsquo;s generate the private key for this request:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;D:\Apps\OpenSSL\bin&amp;gt;openssl genrsa -out rsa.private 2048
Generating RSA private key, 2048 bit long modulus (2 primes)
................................................................
...........................................................+++++
..........................................+++++
e is 65537 (0x010001)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, we generate the CSR:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;D:\Apps\OpenSSL\bin&amp;gt;openssl req -new -key rsa.private -out company.csr.txt
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &amp;#39;.&amp;#39;, the field will be left blank.
-----
Country Name (2 letter code) [CA]:
State or Province Name (full name) [Ontario]:
Locality Name (eg, city) [Port Colbourne]:
Organization Name (eg, company) [Company]:
Organizational Unit Name (eg, section) [IT-CNS]:
Common Name (e.g. server FQDN or YOUR name) []:company.com
Email Address [helpdesk@company.com]:

Please enter the following &amp;#39;extra&amp;#39; attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:

D:\Apps\OpenSSL\bin&amp;gt;openssl.exe req -noout -text -in company.csr.txt
Certificate Request:
    Data:
        Version: 1 (0x0)
        Subject: C = CA, ST = Ontario, L = Port Colbourne, O = company, OU = IT-CNS, CN = company.com, emailAddress = helpdesk@company.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                RSA Public-Key: (2048 bit)
                Modulus:
                    00:e8:cb:2a:71:99:b1:5f:17:fd:c7:db:7e:82:f9:
                    1a:a4:fc:7b:ae:d8:2b:1c:e6:06:96:8b:13:e8:77:
                    6d:28:ed:ba:5a:09:79:7b:58:32:7d:97:05:51:8c:
                    eb:ea:63:c3:c8:11:15:ce:3c:b5:6d:e3:12:22:cb:
                    8e:1d:c9:0a:01:12:2c:1a:34:59:f1:fc:48:c5:32:
                    9a:5c:93:85:e8:75:33:c2:fc:b6:3a:37:71:85:9a:
                    e7:b3:b4:f0:9c:86:b2:a1:d6:3f:49:c3:05:9c:ab:
                    1b:6b:94:f7:66:90:69:48:40:dc:cb:2e:f1:04:8a:
                    b9:4b:da:7c:34:f1:a2:a9:9b:a5:4e:41:47:0a:f9:
                    63:ff:f3:23:c0:be:01:45:92:57:48:6b:27:40:e5:
                    af:a0:fd:b1:80:5c:a4:6e:26:34:a1:1b:4e:10:c0:
                    de:3b:0e:1d:0c:48:e6:4f:0c:3a:2b:92:9c:60:6a:
                    20:35:8a:b0:c1:af:81:ae:3f:fe:c6:90:25:7d:b6:
                    09:a6:9e:47:88:dc:68:72:fe:7f:2d:4d:0f:95:77:
                    00:bf:7f:a0:8e:aa:00:98:90:32:93:ae:da:54:52:
                    79:6d:6c:d0:4e:63:fb:93:e3:c8:a9:3f:17:29:33:
                    56:1c:3c:3c:0e:29:99:23:ff:44:ac:03:de:c9:eb:
                    16:73
                Exponent: 65537 (0x10001)
        Attributes:
        Requested Extensions:
            X509v3 Subject Alternative Name:
                DNS:company.com, DNS:www.company.com, DNS:www.company.ca, DNS:company.ca
    Signature Algorithm: sha256WithRSAEncryption
         cd:39:8f:f7:9d:30:84:ab:0f:7e:60:a1:ee:bd:78:a8:ad:95:
         b0:cc:a4:df:64:8c:ec:94:9f:a1:79:36:ed:b9:74:00:8c:29:
         9b:72:d8:4b:5a:24:0a:c5:65:36:6b:8a:0d:80:24:7b:6f:f7:
         65:08:f9:60:6c:d8:58:3a:62:cd:df:e7:00:2a:7c:13:41:df:
         51:e8:32:3a:c4:55:ca:2d:1d:fb:ed:f4:43:e4:55:0a:b4:f0:
         cc:3a:ca:6d:42:70:c9:03:f5:83:b4:be:6e:e5:ce:06:70:ea:
         99:3c:59:cd:6e:75:ce:c2:c6:7b:20:32:62:3c:63:12:03:e3:
         69:5d:ab:9c:9c:be:c1:4c:be:9e:98:63:a9:5a:b0:75:25:c3:
         17:0a:47:e7:91:c4:10:01:5f:13:8f:7b:96:e1:cf:63:39:87:
         8f:e4:2f:92:02:b6:68:9a:cb:d8:aa:28:8f:b4:e7:fe:4e:18:
         83:cb:a8:9e:1e:46:72:bb:b6:f6:f1:9e:3a:b6:f9:f6:07:b6:
         69:92:0e:18:35:d4:00:48:5a:71:21:9f:61:ae:69:4d:34:d2:
         dd:d7:24:1d:7f:e9:2b:cd:a4:9b:70:82:8f:ee:8e:1a:49:43:
         a3:54:b2:e7:78:4d:47:5e:f3:08:71:d7:07:a5:af:9e:89:e0:
         bb:50:1a:1f
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;merging-the-cer-and-key-to-create-a-pfx&#34;&gt;Merging the CER and KEY to create a PFX
&lt;/h2&gt;&lt;p&gt;After sending off the CSR, I received back a certificate (CER) file from the certificate management department. This is the certificate I need, but it does not have the private key attached. If I were to import this, I&amp;rsquo;d get a notice saying that it&amp;rsquo;s missing the private key (&amp;ldquo;You do not have the private key for this certificate&amp;rdquo;). Let&amp;rsquo;s merge the KEY with the CER and generate a PFX, with everything nicely bundled together and protected by a password. Back to openssl:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;D:\Apps\OpenSSL\bin&amp;gt;openssl pkcs12 -export -out company.pfx -inkey rsa.private -in ServerCertificate.crt
Enter Export Password:
Verifying - Enter Export Password:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now that I have the PFX, I can import into Netscaler and bind it to my VSRV.&lt;/p&gt;
&lt;h2 id=&#34;bind-to-powerapps&#34;&gt;Bind to PowerApps
&lt;/h2&gt;&lt;p&gt;I also have to upload this to PowerApps and bind it to the proper portal:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Launch the PowerApps Portals Admin Centre in a browser&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Manage SSL Certificates&amp;rdquo;. You&amp;rsquo;ll see a list of certificates that PowerApps knows about.
&lt;ul&gt;
&lt;li&gt;Click &amp;ldquo;Add New&amp;rdquo;. Browse to the PFX you&amp;rsquo;d generated and upload it, along with the password.&lt;/li&gt;
&lt;li&gt;Verify your new certificate is now listed with the proper expiry date and SAN. Make a note of the Thumbprint!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Setup Custom Domains and SSL&amp;rdquo;. Under &lt;em&gt;SSL Bindings&lt;/em&gt;, you&amp;rsquo;ll see the currently bound certificate.
&lt;ul&gt;
&lt;li&gt;Delete the currently bound certificate&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Add New&amp;rdquo; and add the certificate you&amp;rsquo;d previously uploaded.&lt;/li&gt;
&lt;li&gt;Verify the bound certificate&amp;rsquo;s Thumbprint matches what you&amp;rsquo;d previously recorded (above)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now use a tool like &lt;a class=&#34;link&#34; href=&#34;https://www.ssllabs.com/ssltest/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Qualys&amp;rsquo; SSL Server Test&lt;/a&gt; to make sure that the new certificate is actually in use.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
